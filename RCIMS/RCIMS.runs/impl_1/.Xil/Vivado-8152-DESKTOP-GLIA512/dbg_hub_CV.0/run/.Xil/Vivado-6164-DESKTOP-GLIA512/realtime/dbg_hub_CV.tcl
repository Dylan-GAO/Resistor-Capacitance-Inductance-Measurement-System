# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/.Xil/Vivado-6164-DESKTOP-GLIA512/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    set rt::partid xc7z010clg400-1

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common_vhdl.tcl
    set rt::defaultWorkLibName xil_defaultlib

    # Skipping read_* RTL commands because this is post-elab optimize flow
    set rt::useElabCache true
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv -include c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/verilog {
      C:/Xilinx/Vivado/2017.2/data/ip/xpm/xpm_cdc/hdl/xpm_cdc.sv
      C:/Xilinx/Vivado/2017.2/data/ip/xpm/xpm_memory/hdl/xpm_memory.sv
    }
      rt::read_verilog -include c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/verilog {
      c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/xsdbm_v3_0_vl_rfs.v
      c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/ltlib_v1_0_vl_rfs.v
      c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/synth/dbg_hub_CV.v
    }
      rt::read_vhdl -lib blk_mem_gen_v8_3_6 c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/blk_mem_gen_v8_3_vhsyn_rfs.vhd
      rt::read_vhdl -lib fifo_generator_v13_1_4 c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/prj_ip_0.srcs/sources_1/ip/dbg_hub_CV/hdl/fifo_generator_v13_1_vhsyn_rfs.vhd
      rt::read_vhdl -lib xpm C:/Xilinx/Vivado/2017.2/data/ip/xpm/xpm_VCOMP.vhd
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification true
    set rt::SDCFileList c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/.Xil/Vivado-6164-DESKTOP-GLIA512/realtime/dbg_hub_CV_synth.xdc
    rt::sdcChecksum
    set rt::top dbg_hub_CV
    set rt::ioInsertion false
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter ramStyle auto
    rt::set_parameter merge_flipflops true
# MODE: out_of_context
    rt::set_parameter webTalkPath {}
    rt::set_parameter enableSplitFlowPath "c:/work/Resistor-Capacitance-Inductance-Measurement-System/RCIMS/RCIMS.runs/impl_1/.Xil/Vivado-8152-DESKTOP-GLIA512/dbg_hub_CV.0/run/.Xil/Vivado-6164-DESKTOP-GLIA512/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    if { $rt::flowresult == 1 } { return -code error }

    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] && [info exists rt::doParallel] && $rt::doParallel} { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] && [info exists rt::doParallel] && $rt::doParallel} { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}

Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
-----------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2017.2 (win64) Build 1909853 Thu Jun 15 18:39:09 MDT 2017
| Date         : Mon Dec  4 18:30:13 2017
| Host         : DESKTOP-GLIA512 running 64-bit major release  (build 9200)
| Command      : report_methodology -file system_wrapper_methodology_drc_routed.rpt -rpx system_wrapper_methodology_drc_routed.rpx
| Design       : system_wrapper
| Device       : xc7z010clg400-1
| Speed File   : -1
| Design State : Routed
-----------------------------------------------------------------------------------------------------------------------------------

Report Methodology

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: checkpoint_system_wrapper
      Design limits: <entire design considered>
             Max violations: <unlimited>
             Violations found: 119
+-----------+----------+-------------------------------------------------+------------+
| Rule      | Severity | Description                                     | Violations |
+-----------+----------+-------------------------------------------------+------------+
| PDRC-190  | Warning  | Suboptimally placed synchronized register chain | 14         |
| TIMING-17 | Warning  | Non-clocked sequential cell                     | 66         |
| TIMING-18 | Warning  | Missing input or output delay                   | 3          |
| XDCB-1    | Warning  | Runtime intensive exceptions                    | 1          |
| XDCB-5    | Warning  | Runtime inefficient way to find pin objects     | 35         |
+-----------+----------+-------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
PDRC-190#1 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[0] in site SLICE_X12Y39 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#2 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[1] in site SLICE_X11Y39 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#3 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[2] in site SLICE_X14Y39 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[2] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#4 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_reg[3] in site SLICE_X13Y38 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD2/stat_reg_1_reg[3] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#5 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[0] in site SLICE_X9Y38 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#6 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[1] in site SLICE_X10Y38 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#7 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_reg[2] in site SLICE_X12Y37 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD3/stat_reg_1_reg[2] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#8 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[12] in site SLICE_X7Y39 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[11] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#9 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[20] in site SLICE_X7Y38 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[19] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#10 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[4] in site SLICE_X7Y40 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD4/shift_reg_in_reg[3] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#11 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[10] in site SLICE_X15Y44 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[9] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#12 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[2] in site SLICE_X15Y45 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD5/shift_reg_in_reg[1] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#13 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/shift_reg_in_reg[0] in site SLICE_X14Y35 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

PDRC-190#14 Warning
Suboptimally placed synchronized register chain  
The FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_reg[0] in site SLICE_X14Y36 is part of a synchronized register chain that is suboptimally placed as the load FDRE cell dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_STAT/stat_reg_1_reg[0] is not placed in the same (SLICE) site.
Related violations: <none>

TIMING-17#1 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/adc_reset_reg/C is not reached by a timing clock
Related violations: <none>

TIMING-17#2 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/cnt_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#3 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/cnt_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#4 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/cnt_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#5 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/cnt_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#6 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/cnt_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#7 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/prev_done_reg/C is not reached by a timing clock
Related violations: <none>

TIMING-17#8 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#9 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[10]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#10 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[11]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#11 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[12]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#12 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[13]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#13 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[14]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#14 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[15]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#15 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#16 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#17 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#18 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#19 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#20 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[6]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#21 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[7]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#22 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[8]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#23 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_reg[9]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#24 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#25 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#26 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#27 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#28 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#29 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#30 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[6]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#31 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/raw_data_tmp_reg[7]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#32 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/cnt_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#33 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/cnt_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#34 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/cnt_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#35 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/cnt_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#36 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#37 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#38 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#39 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#40 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#41 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#42 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[6]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#43 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/hold_to_send_reg[7]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#44 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#45 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#46 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#47 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#48 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#49 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#50 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[6]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#51 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/received_reg[7]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#52 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/state_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#53 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/state_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#54 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/spi_master_i/state_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#55 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#56 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[1]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#57 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[2]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#58 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#59 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#60 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/state_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#61 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/to_send_reg[0]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#62 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/to_send_reg[3]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#63 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/to_send_reg[4]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#64 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/to_send_reg[5]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#65 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/to_send_reg[6]/C is not reached by a timing clock
Related violations: <none>

TIMING-17#66 Warning
Non-clocked sequential cell  
The clock pin system_i/adc_0/inst/transmit_reg/C is not reached by a timing clock
Related violations: <none>

TIMING-18#1 Warning
Missing input or output delay  
An input delay is missing on MISO relative to clock(s) clk_in1 
Related violations: <none>

TIMING-18#2 Warning
Missing input or output delay  
An input delay is missing on reset relative to clock(s) clk_in1 
Related violations: <none>

TIMING-18#3 Warning
Missing input or output delay  
An output delay is missing on Clk_2Mhz relative to clock(s) VIRTUAL_clk_out1_system_clk_wiz_0_0 
Related violations: <none>

XDCB-1#1 Warning
Runtime intensive exceptions  
The following constraint contains more than 1000 objects. To preserve runtime and memory performance, it is recommended to include minimum number of objects. Check whether this list can be simplified.
-from = expands to 1360 design objects. 
set_false_path -from [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*...
c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 41)
Related violations: <none>

XDCB-5#1 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_CDONE/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '55' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 80)
Related violations: <none>

XDCB-5#2 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS0/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '56' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 81)
Related violations: <none>

XDCB-5#3 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/U_NS1/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '57' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 82)
Related violations: <none>

XDCB-5#4 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '42' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 63)
Related violations: <none>

XDCB-5#5 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '49' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 74)
Related violations: <none>

XDCB-5#6 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/U_CMPRESET/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '50' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 75)
Related violations: <none>

XDCB-5#7 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '51' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 76)
Related violations: <none>

XDCB-5#8 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '52' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 77)
Related violations: <none>

XDCB-5#9 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '39' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 60)
Related violations: <none>

XDCB-5#10 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCRST/I_YESLUT6.U_SRL32_*/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '53' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 78)
Related violations: <none>

XDCB-5#11 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '41' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 62)
Related violations: <none>

XDCB-5#12 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/u_scnt_cmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '40' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 61)
Related violations: <none>

XDCB-5#13 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WCE/I_YESLUT6.U_SRLC16E/CLK*" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '54' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 79)
Related violations: <none>

XDCB-5#14 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WHCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '47' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 72)
Related violations: <none>

XDCB-5#15 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/U_WLCMPCE/I_YESLUT6.U_SRL32/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '48' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 73)
Related violations: <none>

XDCB-5#16 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '44' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 69)
Related violations: <none>

XDCB-5#17 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_hcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '46' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 71)
Related violations: <none>

XDCB-5#18 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '43' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 68)
Related violations: <none>

XDCB-5#19 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_window_counter/u_wcnt_lcmp/allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK*"}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '45' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 70)
Related violations: <none>

XDCB-5#20 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/ADV_TRIG.u_adv_trig/FLAG*/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '66' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 95)
Related violations: <none>

XDCB-5#21 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/ADV_TRIG.u_adv_trig/SEQUENCER_STATE_O*/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '65' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 94)
Related violations: <none>

XDCB-5#22 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/COUNTER.u_count/G_COUNTER[*].U_COUNTER/counter_load_i*/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '64' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 93)
Related violations: <none>

XDCB-5#23 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_cap_ctrl/u_cap_addrgen/u_cap_sample_counter/U_SCRST/I_YESLUT6.U_SRL32*/CLK" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '63' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 92)
Related violations: <none>

XDCB-5#24 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg1_reg/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '58' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 87)
Related violations: <none>

XDCB-5#25 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg1_reg/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '59' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 88)
Related violations: <none>

XDCB-5#26 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg1_reg/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '60' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 89)
Related violations: <none>

XDCB-5#27 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg1_reg/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '61' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 90)
Related violations: <none>

XDCB-5#28 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter { NAME =~ "*ila_core_inst/u_ila_reset_ctrl/asyncrounous_transfer.arm_out_transfer_inst/dout_reg1_reg/C" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '62' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 91)
Related violations: <none>

XDCB-5#29 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/u_srl*/S*/CLK}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '33' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 41)
Related violations: <none>

XDCB-5#30 Warning
Runtime inefficient way to find pin objects  
The option '-from : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/u_srl_drive/CLK}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '32' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 40)
Related violations: <none>

XDCB-5#31 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/COUNTER.u_count/G_COUNTER[*].U_COUNTER/counter_reg[*]/D" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '64' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 93)
Related violations: <none>

XDCB-5#32 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_88f/I_EN_STAT_EQ1.U_STAT/xsdb_reg*/D" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '65' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 94)
Related violations: <none>

XDCB-5#33 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter { NAME =~  "*ila_core_inst/u_ila_regs/reg_892/I_EN_STAT_EQ1.U_STAT/xsdb_reg*/D" }]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '66' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 95)
Related violations: <none>

XDCB-5#34 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '32' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 40)
Related violations: <none>

XDCB-5#35 Warning
Runtime inefficient way to find pin objects  
The option '-to : [get_pins -hierarchical -filter {NAME =~ *allx_typeA_match_detection.ltlib_v1_0_0_allx_typeA_inst/DUT/I_WHOLE_SLICE.G_SLICE_IDX[*].U_ALL_SRL_SLICE/I_IS_TERMINATION_SLICE_W_OUTPUT_REG.DOUT_O_reg/D}]' of constraint 'set_false_path' uses inefficient query to find pin objects (see constraint position '33' in the Timing Constraint window in Vivado IDE). To reduce runtime, it is recommended to get the pins through the cell objects. Please refer to Using Constraints Guide (Constraints Efficiency). An example of optimal query is: get_pins -filter {REF_PIN_NAME=~yy*} -of_objects [get_cells -hierarchical xx*].
Current XDC: c:/work/Resistor-Capacitance-Inductance-Measurement-System/ADC_SPI_test/ADC_SPI_test.runs/impl_1/.Xil/Vivado-908-DESKTOP-GLIA512/u_ila_0_CV.0/out/ila.xdc (Line: 41)
Related violations: <none>


